[{"C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\index.js":"1","C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\reportWebVitals.js":"2","C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\App.js":"3","C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\firebase.config.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":9146,"mtime":1607278276726,"results":"8","hashOfConfig":"6"},{"size":478,"mtime":1606854923560,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1kgesox",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\index.js",[],["21","22"],"C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\reportWebVitals.js",[],"C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\App.js",["23","24","25","26","27","28"],"import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\nfirebase.initializeApp(firebaseConfig);//from documentation\n//by default useState e empty object rkhr jnno ...jhtu authorize kore user e empty object jcce\nfunction App() {\n  const [newUser,setNewUser] = useState(false)//jhtu ekta user tai false...for toggle checkbox\n  const [user,setUser] = useState({\n    isSignedIn : false,\n    name : '',\n    email: '',\n    photo:'',\n    error: '',\n    password:''\n  })\n\n   \n\n  const fbProvider = new firebase.auth.FacebookAuthProvider();//signInWithPopup r vitor parameter hisebe pass kora holo\n  console.log(fbProvider);\n   \n  const handleSignin = () => {\n    const googleprovider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(googleprovider)//google r ontorgoto firebase auth popup use kore amra sign in korar system ta k call korchi\n    .then(res =>{//ora response ta k json format ei dey tai amdr r res.json korar proyojon hyni\n      const {displayName,photoURL,email} = res.user;//res e thaka user r property gulo destructure \n      const signedInUser = {//signedInUser ekti object\n          isSignedInUser : true,\n          name: displayName,\n          email: email,\n          photo: photoURL\n      }\n      setUser(signedInUser);\n    })\n\n    .catch(err =>{//kno karon e error kheye gele amra console log korchi\n       console.log(err)\n       console.log(err.message)\n      });\n  }\n\n  const handleFbSignIn = () =>{\n    firebase.auth().signInWithPopup(fbProvider)\n    .then(result => {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n\n      console.log('fb-user after sign in',user)\n      // ...\n    })\n    .catch(error=> {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n  \n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  }\n\n  const handleSignOut = () =>{\n    firebase.auth().signOut()//call kora holo signout k firebase r auth thke\n    .then(res=>{//jdi ei response orthat signOut ta success hy thle body te dhuke return krbe\n      const signedOutUser = {//jhtu signout tai user r kno info thkbe na ,,,shob empty hbe tai\n        isSignedIn : false,\n        name: '',\n        photo: '',\n        password: '',//dhore nilam by default password hcce empty string\n        email: '',\n        error: '',\n        success: false\n      }\n\n      setUser(signedOutUser);//empty user pass kora holo\n    })\n\n    .catch(err => {\n      \n    })\n  }\n//user jdi already signed in thake thle ? er por statement ti run krbe orthat signout dekhabe..r condition opposite hle sign in krbe\n//trpor signed in hye 64 num line thke execute krte strt krbe\nconst handleBlur = (e) =>{\nlet isFieldValid = true;//by default dhre nilam form ta valid\n\nif(e.target.name === 'email'){//jdi input name email hy thle ekvabe validate koro..jhtu input name string tai === 'email'\n   isFieldValid =  /\\S+@\\S+\\.\\S+/.test(e.target.value);//regular expression diye checking email valid kina\n//orthat regular expression r sthe value mile gele isformValid r man hbe true..otherwise invalid orthat false\n  }\n\nif(e.target.name === 'password'){//ager line r moto\n  const isPasswordValid = e.target.value.length > 6;\n  const passwordHasNumber = /\\d{1}/.test(e.target.value);//regular expression diye check..at least ekta num thkte hbe\n  isFieldValid = passwordHasNumber && isPasswordValid;//duita case fullfill hlei pass valid hbe orthat true...otherwise invalid/false\n  }\n  //ekhn email ba pass jetai change kore blur kora hokk handleBlur k call korbe ebong ebong email hle email,r pass hle pass jdi valid hy then next if e jbe\n  if(isFieldValid){\n    let newUserInfo = {...user}//user e ja ja property chilo amra newUserInfo te copy korlam..newUserInfo ekta object ekhane\n    newUserInfo[e.target.name] = e.target.value;//ekhn user r name or pass jdi change kora hy tahole newUserInfo[password/email] = password/email r value;update hye user e add hbe upore\n    setUser(newUserInfo);//user e set kora\n  }\n    }\n\nconst handleSubmit = (e) =>{\n   if( newUser && user.email && user.password){//jdi newUser true hy ebong ei duita value valid hye thkle checked hye tbei tmr submit ta hbe..amra email ebong pass r value peye state update korci\n    firebase.auth().createUserWithEmailAndPassword(user.email,user.password)\n    .then((res) => {\n      const newUserInfo = {...user}//user ekti object so...newuserInfo hcce object\n       newUserInfo.error = '';\n       newUserInfo.success = true;\n       setUser(newUserInfo);\n       updateUserName(user.name)\n    })\n\n    .catch(error => {\n      const newUserInfo = {...user};\n      newUserInfo.error = error.message;\n      newUserInfo.success = false;\n      setUser(newUserInfo);\n    });\n   }\n\n   if(!newUser && user.email && user.password){\n     firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n  .then(res => {\n    const newUserInfo = {...user}//user ekti object so...newuserInfo hcce object\n       newUserInfo.error = '';\n       newUserInfo.success = true;\n       setUser(newUserInfo)\n       console.log('Sign in user info',res.user)\n  })\n  .catch((error) => {\n    const newUserInfo = {...user};\n      newUserInfo.error = error.message;\n      newUserInfo.success = false;\n      setUser(newUserInfo);\n  });\n \n   }\n   e.preventDefault();//default behaviour avoid krar jnno\n}\n\nconst updateUserName = (name) =>{\n  const user = firebase.auth().currentUser;\n\n  user.updateProfile({//user.updateProfile hcce ekta object\n    displayName: name,\n}).then(function() {\n  console.log('user name updated successfully')\n}).catch(function(error) {\n  console.log(error)\n  });\n}\n\nreturn (\n    <div className=\"App\">\n      {\n        user.isSignedIn ? <button onClick={handleSignOut}>Sign Out</button> :\n        <button onClick={handleSignin}>Sign In</button>\n      }\n       <br/>\n      <button onClick={handleFbSignIn}> Sign In Using Facebook </button>\n      {user.isSignedIn = true && \n        <div>\n          <h1>Welcome: {user.name}</h1>\n          <h1>Email: {user.email}</h1>\n          <img src={user.photo} alt=\"\"/>\n          </div>\n      }\n\n          <h1>Our own authentication</h1>\n          {/* !newUser er mane holo aghe jdi newUser ta true thake false koro..false hole true orthat toggle */}\n           <input type='checkbox' onChange={()=>setNewUser(!newUser)} name='newUser' in=''/>\n      {/* newUser toggle howa mame tru false true false howa r nicher line gula change howa */}\n           <label htmlFor='newUser'>new User Sign Up</label>\n          <p>Name: {user.name}</p>\n           <p>Email: {user.email}</p>\n          <p>Password: {user.password}</p>\n         {/* form r action hcce onSubmit */}\n      <form onSubmit={handleSubmit}>\n          { //newuser true hlei input field ta dkhaba setNewUser call kore kore true r false kora hcche..\n          newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your Name\"/>\n          }\n           <br/>\n         {/* onchange use kora mane input field tir kno kcu change hle ekta event hbe r event ti holo tar mddhe parameter hisebe thaka handleChange function call kora */}\n      <input type=\"text\" name='email' onBlur={handleBlur} placeholder=\"Your Email Address\" required/>\n        <br/>\n         {/* required use kora hyece duti tag e ..use na korle submit hbe na er jnno */}\n      <input type=\"password\" onBlur={handleBlur} name='password' id='' placeholder=\"Password\" required/>\n        <br/>\n         {/* input hisebe submit puro form ta k puron kore submit nibe..ja btn submit kore na..r eta form tag r vitor hlei kj krbe  */}\n      <input type=\"submit\" value={newUser ? 'Sign Up' : 'Sign In'}/>\n         </form>\n         <p style={{color:'red'}}>{user.error}</p>\n         {\n           user.success && <p style={{color: 'Green'}}>User {newUser ?'Created' : 'Loggen In'} Sussessfully</p>\n         }\n    </div>\n  );\n}\n\nexport default App;\n//event mane event ta jekhan theke trigger hyce...target mane jei element theke trigger hoyece\n//thle event.target.value mane value newa\n// event.target.name mane name newa\n//focus thke shore jawa mane blur\n//email or password type korar por tmk oi input field ta blur korte hobe..thlei handleBlur trigger hobe\n//handleBlur function use kora hyece password ebong email duitai valid korar jnno ..function r body te dhuke jkhn name pass pabe pass r kj krbe\n//r jkhn name email r sthe milbe email valid korbe tkhn\n//kno ekta array k amra rekta array r sthe add korte chaile array ta k amra ...operator diye copy kori trpr bosaya dei\n//React kno state k ekbare update kore na..borong copy kore niye eshe state update kore\n//submit r rekta kj hcce tumi jdi kno ekta form k submit koro thle default hisebe se puro page ta k submit kre deyy\n//new user hle create koro r na hle sign in koro\n\n","C:\\Web Development\\Projects\\Projects With Framework\\fire-auth\\src\\firebase.config.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":50,"column":11,"nodeType":"37","messageId":"38","endLine":50,"endColumn":16},{"ruleId":"35","severity":1,"message":"40","line":59,"column":11,"nodeType":"37","messageId":"38","endLine":59,"endColumn":20},{"ruleId":"35","severity":1,"message":"41","line":60,"column":11,"nodeType":"37","messageId":"38","endLine":60,"endColumn":23},{"ruleId":"35","severity":1,"message":"42","line":63,"column":11,"nodeType":"37","messageId":"38","endLine":63,"endColumn":16},{"ruleId":"35","severity":1,"message":"43","line":65,"column":11,"nodeType":"37","messageId":"38","endLine":65,"endColumn":21},{"ruleId":"31","replacedBy":"44"},{"ruleId":"33","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.",["46"],["47"],"no-global-assign","no-unsafe-negation"]